# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: data.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='data.proto',
  package='banditpylib',
  syntax='proto3',
  serialized_pb=_b('\n\ndata.proto\x12\x0b\x62\x61nditpylib\"\"\n\x11SequentialContext\x12\r\n\x05value\x18\x01 \x03(\x02\"\x17\n\x06Vector\x12\r\n\x05value\x18\x01 \x03(\x02\"9\n\x11VectorizedContext\x12$\n\x07vectors\x18\x01 \x03(\x0b\x32\x13.banditpylib.Vector\"\x96\x01\n\x07\x43ontext\x12<\n\x12sequential_context\x18\x01 \x01(\x0b\x32\x1e.banditpylib.SequentialContextH\x00\x12<\n\x12vectorized_context\x18\x02 \x01(\x0b\x32\x1e.banditpylib.VectorizedContextH\x00\x42\x0f\n\rcontext_oneof\"X\n\x03\x41rm\x12\x0c\n\x02id\x18\x01 \x01(\x05H\x00\x12#\n\x03set\x18\x02 \x01(\x0b\x32\x14.banditpylib.Arm.SetH\x00\x1a\x11\n\x03Set\x12\n\n\x02id\x18\x01 \x03(\x05\x42\x0b\n\tarm_oneof\"7\n\x07\x41rmPull\x12\x1d\n\x03\x61rm\x18\x01 \x01(\x0b\x32\x10.banditpylib.Arm\x12\r\n\x05times\x18\x02 \x01(\x05\"2\n\x07\x41\x63tions\x12\'\n\tarm_pulls\x18\x01 \x03(\x0b\x32\x14.banditpylib.ArmPull\"Y\n\x0b\x41rmFeedback\x12\x1d\n\x03\x61rm\x18\x01 \x01(\x0b\x32\x10.banditpylib.Arm\x12\x0f\n\x07rewards\x18\x02 \x03(\x02\x12\x1a\n\x12\x63ustomer_feedbacks\x18\x03 \x03(\x05\";\n\x08\x46\x65\x65\x64\x62\x61\x63k\x12/\n\rarm_feedbacks\x18\x01 \x03(\x0b\x32\x18.banditpylib.ArmFeedback\"P\n\x08\x44\x61taItem\x12\x0e\n\x06rounds\x18\x01 \x01(\x05\x12\x15\n\rtotal_actions\x18\x02 \x01(\x05\x12\x0e\n\x06regret\x18\x03 \x01(\x02\x12\r\n\x05other\x18\x04 \x01(\x02\"S\n\x05Trial\x12\x0e\n\x06\x62\x61ndit\x18\x01 \x01(\t\x12\x0f\n\x07learner\x18\x02 \x01(\t\x12)\n\ndata_items\x18\x03 \x03(\x0b\x32\x15.banditpylib.DataItemb\x06proto3')
)




_SEQUENTIALCONTEXT = _descriptor.Descriptor(
  name='SequentialContext',
  full_name='banditpylib.SequentialContext',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='banditpylib.SequentialContext.value', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=27,
  serialized_end=61,
)


_VECTOR = _descriptor.Descriptor(
  name='Vector',
  full_name='banditpylib.Vector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='banditpylib.Vector.value', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=86,
)


_VECTORIZEDCONTEXT = _descriptor.Descriptor(
  name='VectorizedContext',
  full_name='banditpylib.VectorizedContext',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vectors', full_name='banditpylib.VectorizedContext.vectors', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=145,
)


_CONTEXT = _descriptor.Descriptor(
  name='Context',
  full_name='banditpylib.Context',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequential_context', full_name='banditpylib.Context.sequential_context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vectorized_context', full_name='banditpylib.Context.vectorized_context', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='context_oneof', full_name='banditpylib.Context.context_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=148,
  serialized_end=298,
)


_ARM_SET = _descriptor.Descriptor(
  name='Set',
  full_name='banditpylib.Arm.Set',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='banditpylib.Arm.Set.id', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=358,
  serialized_end=375,
)

_ARM = _descriptor.Descriptor(
  name='Arm',
  full_name='banditpylib.Arm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='banditpylib.Arm.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='set', full_name='banditpylib.Arm.set', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ARM_SET, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='arm_oneof', full_name='banditpylib.Arm.arm_oneof',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=300,
  serialized_end=388,
)


_ARMPULL = _descriptor.Descriptor(
  name='ArmPull',
  full_name='banditpylib.ArmPull',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='arm', full_name='banditpylib.ArmPull.arm', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='times', full_name='banditpylib.ArmPull.times', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=390,
  serialized_end=445,
)


_ACTIONS = _descriptor.Descriptor(
  name='Actions',
  full_name='banditpylib.Actions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='arm_pulls', full_name='banditpylib.Actions.arm_pulls', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=447,
  serialized_end=497,
)


_ARMFEEDBACK = _descriptor.Descriptor(
  name='ArmFeedback',
  full_name='banditpylib.ArmFeedback',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='arm', full_name='banditpylib.ArmFeedback.arm', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rewards', full_name='banditpylib.ArmFeedback.rewards', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='customer_feedbacks', full_name='banditpylib.ArmFeedback.customer_feedbacks', index=2,
      number=3, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=499,
  serialized_end=588,
)


_FEEDBACK = _descriptor.Descriptor(
  name='Feedback',
  full_name='banditpylib.Feedback',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='arm_feedbacks', full_name='banditpylib.Feedback.arm_feedbacks', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=590,
  serialized_end=649,
)


_DATAITEM = _descriptor.Descriptor(
  name='DataItem',
  full_name='banditpylib.DataItem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rounds', full_name='banditpylib.DataItem.rounds', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='total_actions', full_name='banditpylib.DataItem.total_actions', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='regret', full_name='banditpylib.DataItem.regret', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='other', full_name='banditpylib.DataItem.other', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=651,
  serialized_end=731,
)


_TRIAL = _descriptor.Descriptor(
  name='Trial',
  full_name='banditpylib.Trial',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bandit', full_name='banditpylib.Trial.bandit', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='learner', full_name='banditpylib.Trial.learner', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data_items', full_name='banditpylib.Trial.data_items', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=733,
  serialized_end=816,
)

_VECTORIZEDCONTEXT.fields_by_name['vectors'].message_type = _VECTOR
_CONTEXT.fields_by_name['sequential_context'].message_type = _SEQUENTIALCONTEXT
_CONTEXT.fields_by_name['vectorized_context'].message_type = _VECTORIZEDCONTEXT
_CONTEXT.oneofs_by_name['context_oneof'].fields.append(
  _CONTEXT.fields_by_name['sequential_context'])
_CONTEXT.fields_by_name['sequential_context'].containing_oneof = _CONTEXT.oneofs_by_name['context_oneof']
_CONTEXT.oneofs_by_name['context_oneof'].fields.append(
  _CONTEXT.fields_by_name['vectorized_context'])
_CONTEXT.fields_by_name['vectorized_context'].containing_oneof = _CONTEXT.oneofs_by_name['context_oneof']
_ARM_SET.containing_type = _ARM
_ARM.fields_by_name['set'].message_type = _ARM_SET
_ARM.oneofs_by_name['arm_oneof'].fields.append(
  _ARM.fields_by_name['id'])
_ARM.fields_by_name['id'].containing_oneof = _ARM.oneofs_by_name['arm_oneof']
_ARM.oneofs_by_name['arm_oneof'].fields.append(
  _ARM.fields_by_name['set'])
_ARM.fields_by_name['set'].containing_oneof = _ARM.oneofs_by_name['arm_oneof']
_ARMPULL.fields_by_name['arm'].message_type = _ARM
_ACTIONS.fields_by_name['arm_pulls'].message_type = _ARMPULL
_ARMFEEDBACK.fields_by_name['arm'].message_type = _ARM
_FEEDBACK.fields_by_name['arm_feedbacks'].message_type = _ARMFEEDBACK
_TRIAL.fields_by_name['data_items'].message_type = _DATAITEM
DESCRIPTOR.message_types_by_name['SequentialContext'] = _SEQUENTIALCONTEXT
DESCRIPTOR.message_types_by_name['Vector'] = _VECTOR
DESCRIPTOR.message_types_by_name['VectorizedContext'] = _VECTORIZEDCONTEXT
DESCRIPTOR.message_types_by_name['Context'] = _CONTEXT
DESCRIPTOR.message_types_by_name['Arm'] = _ARM
DESCRIPTOR.message_types_by_name['ArmPull'] = _ARMPULL
DESCRIPTOR.message_types_by_name['Actions'] = _ACTIONS
DESCRIPTOR.message_types_by_name['ArmFeedback'] = _ARMFEEDBACK
DESCRIPTOR.message_types_by_name['Feedback'] = _FEEDBACK
DESCRIPTOR.message_types_by_name['DataItem'] = _DATAITEM
DESCRIPTOR.message_types_by_name['Trial'] = _TRIAL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SequentialContext = _reflection.GeneratedProtocolMessageType('SequentialContext', (_message.Message,), dict(
  DESCRIPTOR = _SEQUENTIALCONTEXT,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.SequentialContext)
  ))
_sym_db.RegisterMessage(SequentialContext)

Vector = _reflection.GeneratedProtocolMessageType('Vector', (_message.Message,), dict(
  DESCRIPTOR = _VECTOR,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.Vector)
  ))
_sym_db.RegisterMessage(Vector)

VectorizedContext = _reflection.GeneratedProtocolMessageType('VectorizedContext', (_message.Message,), dict(
  DESCRIPTOR = _VECTORIZEDCONTEXT,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.VectorizedContext)
  ))
_sym_db.RegisterMessage(VectorizedContext)

Context = _reflection.GeneratedProtocolMessageType('Context', (_message.Message,), dict(
  DESCRIPTOR = _CONTEXT,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.Context)
  ))
_sym_db.RegisterMessage(Context)

Arm = _reflection.GeneratedProtocolMessageType('Arm', (_message.Message,), dict(

  Set = _reflection.GeneratedProtocolMessageType('Set', (_message.Message,), dict(
    DESCRIPTOR = _ARM_SET,
    __module__ = 'data_pb2'
    # @@protoc_insertion_point(class_scope:banditpylib.Arm.Set)
    ))
  ,
  DESCRIPTOR = _ARM,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.Arm)
  ))
_sym_db.RegisterMessage(Arm)
_sym_db.RegisterMessage(Arm.Set)

ArmPull = _reflection.GeneratedProtocolMessageType('ArmPull', (_message.Message,), dict(
  DESCRIPTOR = _ARMPULL,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.ArmPull)
  ))
_sym_db.RegisterMessage(ArmPull)

Actions = _reflection.GeneratedProtocolMessageType('Actions', (_message.Message,), dict(
  DESCRIPTOR = _ACTIONS,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.Actions)
  ))
_sym_db.RegisterMessage(Actions)

ArmFeedback = _reflection.GeneratedProtocolMessageType('ArmFeedback', (_message.Message,), dict(
  DESCRIPTOR = _ARMFEEDBACK,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.ArmFeedback)
  ))
_sym_db.RegisterMessage(ArmFeedback)

Feedback = _reflection.GeneratedProtocolMessageType('Feedback', (_message.Message,), dict(
  DESCRIPTOR = _FEEDBACK,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.Feedback)
  ))
_sym_db.RegisterMessage(Feedback)

DataItem = _reflection.GeneratedProtocolMessageType('DataItem', (_message.Message,), dict(
  DESCRIPTOR = _DATAITEM,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.DataItem)
  ))
_sym_db.RegisterMessage(DataItem)

Trial = _reflection.GeneratedProtocolMessageType('Trial', (_message.Message,), dict(
  DESCRIPTOR = _TRIAL,
  __module__ = 'data_pb2'
  # @@protoc_insertion_point(class_scope:banditpylib.Trial)
  ))
_sym_db.RegisterMessage(Trial)


# @@protoc_insertion_point(module_scope)
