syntax = "proto3";

package banditpylib;


message Arm {
  // Next tag 2
  message Set {
    repeated int32 id = 1;
  }

  // Next tag: 3
  oneof Arm {
    // The arm id is an integer
    int32 id = 1;
    // The arm id is a set
    Set set = 2;
  }
}

// Next tag: 3
message ArmPullsPair {
  // Arm to be pulled
  Arm arm = 1;
  // Number of times to pull
  int32 pulls = 2;
}

// Next tag: 2
message Actions {
  repeated ArmPullsPair arm_pulls_pairs = 1;
}

// Next tag: 4
message ArmRewardsPair {
  // Arm to be pulled
  Arm arm = 1;
  // The corresponding rewards
  repeated float rewards = 2;
  // This field is specific to MNL bandit. When this field is 0, it means the
  // customer does not but any product. Otherwise (>0), it means the customer
  // purchases some product.
  repeated int32 customer_feedbacks = 3;
}

// Next tag: 2
message Feedback {
  repeated ArmRewardsPair arm_rewards_pairs = 1;
}

// Next tag: 5
message DataItem {
  // Total communication rounds
  int32 rounds = 1;
  // Total actions performed by the learner
  int32 total_actions = 2;
  // Learner's regret i.e., the difference between the optimal policy and the
  // one generated by the learner
  float regret = 3;
  // This is a placeholder used to record other information
  float other = 4;
}

// Next tag: 4
// This message stores the data generated within one trial
message Trial {
  // Bandit name
  string bandit = 1;
  // Learner name
  string learner = 2;
  repeated DataItem data_items  = 3;
}
